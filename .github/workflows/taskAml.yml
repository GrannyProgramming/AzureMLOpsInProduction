name: Azure ML Workflow
on:
  push:
    branches:
      - main
    
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [dev] #[dev, test, prod]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Set Up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
        
      - name: Install Dependencies
        run: python3 .github/utils/installDependencies.py
      
        # Fully complete&refactored&commented / Needs testing added
      - name: Build Wheel And Install Helper Functions
        run: |
          cd .github/utils/pyWheels
          python3 setup.py bdist_wheel
          for whl in $(find dist -name "*.whl"); do python -m pip install $whl; done

      # Fully complete&refactored&commented / Needs testing added
      - name: Json Schema Validation
        run: |
          python3 .github/utils/jsonSchemaValidator.py variables/${{ matrix.environment }}        

        # small script, no need to improve / Needs testing added
      - name: Set Env Variables
        run: | 
          python3 .github/utils/setEnvVariables.py variables/${{ matrix.environment }}/parameters/parameters.json "['workspace_name=mlw-amcg0002-gwxp', 'resource_group=aml-dev-rg-001']"

        # small script, no need to improve / Needs testing added
      - name: Azure Login
        run: |
          echo ${{ secrets.ARM_CLIENT_ID }}
          az login --service-principal \
          --username "${{ secrets.ARM_CLIENT_ID }}" \
          --password "${{ secrets.ARM_CLIENT_SECRET }}" \
          --tenant "${{ secrets.ARM_TENANT_ID }}"
      
      # - name: Compile & Deploy Bicep Templates
      #   run: |
      #     bicep build ./infra/main.bicep
      #     python3 .github/utils/createAzureResources.py

      # Create Cluster  - Done, having issues with creating the kubernetes compute and AKS compute. Create seperate script for this. @GrannyProgramming
      # - name: Create AML Instance/Clusters
      #   env:
      #     ENVIRONMENT: ${{ matrix.environment }}
      #   run: | 
      #     python3 .github/utils/createCompute.py

      # This step is optional and relevant to the quickstart. 
      # If data already exists elsewhere reference it in the data asset step and skip this one. 
      # May run this as a standalone workflow, for now, fine as is @GrannyProgramming 
      # - name: Create An Mltable 
      #   env:
      #     ENVIRONMENT: ${{ matrix.environment }}
      #   run: | 
      #     python3 .github/utils/createMlTable.py dataScience/src/data

      # Create data asseets 
      # @GrannyProgramming should I leave the unused file types in the json?
      # - name: Create Data Assets
      #   env:
      #     ENVIRONMENT: ${{ matrix.environment }}
      #   run: | 
      #     python3 .github/utils/createDataAsset.py variables/dev/dataAssests/dataAssets.json

      # @grannyProgramming - should I force a environment update if the version is updated but the dependencies are the same?
      # @GrannyProgramming - Not sure if I can use the same logic for dockerfiles as I did for the conda file
      - name: Create AML Environments
        env:
          ENVIRONMENT: ${{ matrix.environment }}
        run: | 
          python3 .github/utils/createEnvironments.py variables/dev/environments/environments.json

      - name: Create Components
        env:
          ENVIRONMENT: ${{ matrix.environment }}
        run: | 
          python3 .github/utils/createComponent.py variables/dev/components/components.json
  