name: Azure ML Workflow
on:
  push:
    branches:
      - main
    
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [dev] #[dev, test, prod]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
        
      - name: Install dependencies
        run: python3 .github/utils/installDependencies.py
      
        # Fully complete&refactored&commented / Needs testing added
      - name: Json schema validation
        run: |
          python3 .github/utils/jsonSchemaValidator.py variables/${{ matrix.environment }}        

        # Fully complete&refactored&commented / Needs testing added
      # - name: Build wheel and install helper functions
      #   run: |
      #     cd .github/utils/pyWheels
      #     python3 setup.py bdist_wheel
      #     for whl in $(find dist -name "*.whl"); do python -m pip install $whl; done

        # small script, no need to improve
      - name: Set Env Variables
        run: | 
          python3 .github/utils/setEnvVariables.py variables/${{ matrix.environment }}/parameters/parameters.json "['workspace_name=mlw-amcg0002-gwxp', 'resource_group=aml-dev-rg-001']"

        # small script, no need to improve
      - name: Azure login
        run: |
          echo ${{ secrets.ARM_CLIENT_ID }}
          az login --service-principal \
          --username "${{ secrets.ARM_CLIENT_ID }}" \
          --password "${{ secrets.ARM_CLIENT_SECRET }}" \
          --tenant "${{ secrets.ARM_TENANT_ID }}"
      


      # commented for faster compile in gh actions
      # - name: Compile Bicep templates
      #   run: |
      #     bicep build ./core/infra/main.bicep

      # - name: Deploy Bicep templates
      #   run: |
      #     python3 .github/utils/createAzureResources.py

      # Create Cluster  - Done, having issues with creating the kubernetes compute and AKS compute. Create seperate script for this.
      # - name: Create AML instance/compute Clusters
      #   env:
      #     ENVIRONMENT: ${{ matrix.environment }}
      #   run: | 
      #     python3 .github/utils/createCompute.py

      # Create mltable, OPTIONAL
      # Does this make sense to have here? As it will mean it will be created everytime the pipeline is run.
      # This will refresh the mltable everytime the pipeline is run though, which is good.
      # Myabe just leave it in here as an example of how to create an mltable.  
      - name: Create an mltable 
        env:
          ENVIRONMENT: ${{ matrix.environment }}
        run: | 
          python3 .github/utils/createMlTable.py dataScience/src/data

      # Create data asseets, 
      - name: Create data asseets
        env:
          ENVIRONMENT: ${{ matrix.environment }}
        run: | 
          python3 .github/utils/createDataAsset.py variables/dev/dataAssests/dataAssets.json

